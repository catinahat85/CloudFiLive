name: Build, Push, and Deploy Docker Image to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      KUBECONFIG: ${{ secrets.KUBECONFIG }}  # Set KUBECONFIG globally for all steps

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: jakehazex21/my-nginx-app:latest

    # Debug: Print the contents of KUBECONFIG to verify it is correct
    - name: Print KUBECONFIG contents
      run: echo "${{ env.KUBECONFIG }}" > kubeconfig && cat kubeconfig

    # List available contexts to check for issues
    - name: List available Kubernetes contexts
      run: kubectl config get-contexts

    # Dynamically set the context if found
    - name: Dynamically set Kubernetes context
      run: |
        CONTEXT_NAME=$(kubectl config get-contexts -o name | grep "do-nyc1-k8s-cloudfi" || echo "not_found")
        if [ "$CONTEXT_NAME" = "not_found" ]; then
          echo "Context not found. Exiting."
          exit 1
        else
          kubectl config use-context $CONTEXT_NAME
        fi

    # Test Kubernetes connection
    - name: Test Kubernetes connection
      run: kubectl get nodes

    # Update the image in your Kubernetes deployment
    - name: Update and deploy to Kubernetes
      run: |
        kubectl set image deployment/my-nginx-app my-nginx-app=jakehazex21/my-nginx-app:latest
        kubectl rollout status deployment/my-nginx-app
